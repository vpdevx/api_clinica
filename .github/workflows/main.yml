name: Deploy app

on:
  push:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Get commit short sha
        id: vars
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
        
      - name: Log SHORT_SHA
        run: echo "SHORT_SHA is $SHORT_SHA"
      
      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: api_clinica:${{ env.SHORT_SHA }}
          outputs: type=docker,dest=/tmp/api_clinica.tar
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: api_clinica
          path: /tmp/api_clinica.tar

  push:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: api_clinica
          path: /tmp
          
      - name: Get commit short sha
        id: vars
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV

      - name: Log SHORT_SHA
        run: echo "SHORT_SHA is $SHORT_SHA"

      - name: Deploy to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          docker load --input /tmp/api_clinica.tar
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker tag api_clinica:${{ env.SHORT_SHA }} ${{ secrets.DOCKER_HUB_USERNAME }}/api_clinica:${{ env.SHORT_SHA }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/api_clinica:${{ env.SHORT_SHA }}

  deploy:

    runs-on: ubuntu-latest
    needs: ["build", "push"]

    steps: 

      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Get commit short sha
        id: vars
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV

      - name: Change yaml image attribute value.
        run: |
          # Definir variáveis de ambiente temporárias para uso com sed
          DOCKER_HUB_USERNAME="${{ secrets.DOCKER_HUB_USERNAME }}"
          SHORT_SHA="${{ env.SHORT_SHA }}"

          # Exibir variáveis para depuração
          echo "Docker Hub Username: $DOCKER_HUB_USERNAME"
          echo "Short SHA: $SHORT_SHA"

          # Substituir valores no arquivo YAML
          sed -i "s|${DOCKER_HUB_USERNAME}|${DOCKER_HUB_USERNAME}|g" manifests/api_clinica.yaml
          sed -i "s|${SHORT_SHA}|${SHORT_SHA}|g" manifests/api_clinica.yaml

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
        run: |
          mkdir $HOME/.kube   
          echo "$KUBECONFIG_DATA" | base64 --decode > $HOME/.kube/config
          kubectl apply -f manifests/api_clinica.yaml